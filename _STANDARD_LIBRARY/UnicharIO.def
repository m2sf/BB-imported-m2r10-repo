(* (C) 2009-2016 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE UnicharIO [ProtoIO] FOR UNICHAR;

(* IO Extension Library for Type UNICHAR *)

IMPORT FileIO;

(* EBNF of the textual representation of UNICHAR values:
    charValue : textFormat | numericFormat ;
    textFormat : letter | digit | nonAlphaChar ;
    numericFormat : "0u" ( base16Digit base16Digit )+ ;
    base16Digit : "0" .. "9" | "A" .. "F" ; *)

PROCEDURE [READ] Read ( infile : FileIO.File; VAR ch : UNICHAR );
(* Reads a CHAR value from stream infile
   - any leading whitespace is skipped
   - the character being read is removed from infile
   - the code point of the character value read is assigned to ch
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a UNICHAR argument. *)

PROCEDURE [WRITE] Write ( outfile : FileIO.File; ch : UNICHAR );
(* Writes the textual representation of UNICHAR ch to stream outfile. This
   procedure is substituted for invocations of WRITE with a UNICHAR argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : FileIO.File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST >0 OF UNICHAR );
(* Writes a formatted textual representation of one or more UNICHAR values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   UNICHAR arguments. *)

END UnicharIO.