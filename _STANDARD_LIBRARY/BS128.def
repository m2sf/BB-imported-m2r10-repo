(* (C) 2009-2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE BS128 [ProtoStaticSet];

(* 128-bit statically allocatable bitsets *)


(* Imports *)

FROM FileIO IMPORT File; (* required for IO *)

IMPORT CHARSET; (* for conversion *)


(* Constants *)

CONST MaxCapacity = 128;

CONST RequiredOctets = 16;

CONST [ORD] isOrdered = TRUE;
(* Enables the use of FOR DESCENDING syntax. *)


(* BS128 Type *)

TYPE BS128 = OPAQUE RECORD
    elements : ARRAY ReqOctets OF OCTET;
END; (* BS128 *)


PROCEDURE [TLIMIT] capacityLimit : LONGCARD;
(* Returns the value of constant MaxCapacity. This function is bound to
   pervasive function TLIMIT for type operand BS128. *)


PROCEDURE [TSIZE] storageSize : LONGCARD;
(* Returns the value of constant RequiredOctets. This function is bound
   to pervasive function TSIZE for type operand BS128. *)


(* Conversion *)

PROCEDURE [::] toCHARSET ( CONST bitset : BS128 ) : CHARSET;
(* Converts the value of bitset to type CHARSET and returns it. *)


(* Storage, Removal, Retrieval and Inspection of Contents *)

PROCEDURE [STORE] storeElements
  ( VAR bitset : BS128; valueList : ARGLIST OF CARDINAL );
(* Stores the elements given by valueList in BS128 variable bitset.
   This procedure is bound to pervasive procedure STORE for first
   operands of type BS128. *)


PROCEDURE [REMOVE] removeElements
  ( VAR bitset : BS128; valueList : ARGLIST OF CARDINAL );
(* Removes the elements given by valueList from BS128 variable bitset. Re-
   moves all elements if no values are passed in valueList. This procedure is
   bound to pervasive procedure REMOVE for first operands of type BS128. *)


PROCEDURE [RETRIEVE] membershipForElement
  ( CONST bitset : BS128; value : CARDINAL ) : BOOLEAN;
(* Calls function isElement and returns its result. This function is bound to
   pervasive function RETRIEVE for first operands of type BS128. *)


PROCEDURE [IN] isElement ( CONST bitset : BS128; value : CARDINAL ) : BOOLEAN;
(* Returns TRUE if value is an element of bitset, returns FALSE otherwise.
   This function is bound to operator IN for left operands of type CARDINAL
   and right operands of type BS128. *)


PROCEDURE [COUNT] elementCount ( CONST bitset : BS128 ) : LONGCARD;
(* Returns the number of elements in BS128 set. This function is bound
   to pervasive function COUNT for type BS128. *)


(* Iteration *)

TYPE ForLoopBodyProc = PROCEDURE ( (* value : *) CARDINAL );

PROCEDURE [FOR] forIterator
  ( CONST bitset : BS128;
    forLoopBody : ForLoopBodyProc; ascending : BOOLEAN );
(* Iterates over all elements in bitset, executing procedure forLoopBody
   for each element stored in bitset. If TRUE is passed in for ascending,
   the iteration order is ascending, otherwise descending. This procedure
   is bound to built-in syntax FOR IN for type BS128. *)


(* Set Operations *) 

PROCEDURE [+] union ( CONST bitset1, bitset2 : BS128 ) : BS128;
(* Returns the union of BS128 values bitset1 and bitset2. This function
   is bound to the + operator for operands of type BS128. *)

PROCEDURE [-] diff ( CONST bitset1, bitset2 : BS128 ) : BS128;
(* Returns the set difference of BS128 values bitset1 and bitset2. This
   function is bound to the - operator for operands of type BS128. *)

PROCEDURE [*] intersection ( CONST bitset1, bitset2 : BS128 ) : BS128;
(* Returns the intersection of BS128 values bitset1 and bitset2.  This
   function it bound to the * operator for operands of type BS128. *)

PROCEDURE [/] symdiff ( CONST bitset1, bitset2 : BS128 ) : BS128;
(* Returns the symmetric set difference of BS128 values bitset1 and bitset2.
   This function is bound to the / operator for operands of type BS128. *)


(* Relational operations *)

PROCEDURE [=] isEqual ( CONST bitset1, bitset2 : BS128 ) : BOOLEAN;
(* Returns TRUE if BS128 values bitset1 and bitset2 are equal, otherwise
   FALSE. This function is used to synthesise bindings to the operators =
   and # for operands of type BS128. *)


PROCEDURE [SUBSET] isSubset ( CONST bitset1, bitset2 : BS128 ) : BOOLEAN;
(* Returns TRUE if BS128 bitset1 is a subset of bitset2, otherwise FALSE.
   This function is used to synthesise bindings to the operators >, >=, <
   and <= for operands of type BS128. *)

(* Introspection *)

PROCEDURE capacity ( CONST bitset : BS128 ) : LONGCARD;
(* Always returns the value of TLIMIT(BS128). *)


PROCEDURE entryLimit ( CONST bitset : BS128 ) : LONGCARD;
(* Always returns the value of TLIMIT(BS128). *)


PROCEDURE isResizable ( CONST bitset : BS128 ) : BOOLEAN;
(* Always returns FALSE because type BS128 is static *)


END BS128.