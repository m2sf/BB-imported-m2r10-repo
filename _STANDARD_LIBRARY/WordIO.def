(* (C) 2009-2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE WordIO [ProtoIO] FOR WORD;

(* I/O Module for Type WORD *)

FROM UNSAFE IMPORT WORD;
FROM FileIO IMPORT File;

(* EBNF of the textual representation of WORD values:

    wordValue :
       digitGroup digitGroup ( groupSeparator? digitGroup digitGroup )* ;
    digitGroup : base16Digit base16Digit ;
    base16Digit : "0" .. "9" | "A" .. "F" ;
    groupSeparator : " " | "." ;
    
    static semantics:
    
    WORD values are always left padded with zeroes to the length
    required to represent the maximum value of type WORD. *)

PROCEDURE [READ] Read ( infile : File; VAR b : WORD );
(* Reads the textual representation of a WORD value from stream infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the value being read are
     removed from infile
   - the textual representation of the value read is assigned to b
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a WORD argument. *)

PROCEDURE [WRITE] Write ( outfile : File; CONST b : WORD );
(* Writes the value of WORD b in simple format to stream outfile. This
   procedure is substituted for invocations of WRITE with a WORD argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST WORD );
(* Writes a formatted textual representation of one or more WORD values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   WORD arguments. *)
   
PROCEDURE [READ] ReadArray ( infile : File; VAR value : ARRAY OF WORD );
(* Calls Read repeatedly to read the textual representation of a sequence of
 WORD values from stream infile into an array.
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with an ARRAY OF WORD argument.*)


PROCEDURE [WRITE] WriteArray ( outfile : File; CONST value : ARRAY OF WORD );
(* Calls Write repeatedly to write an array  of WORDin simple format to stream outfile.
  This procedure is substituted for invocations of WRITE with an ARRAY OF WORD argument.*)

PROCEDURE [WRITEF] WriteArrayF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST ARRAY OF WORD );

(* Writes a formatted textual representation of one or more ARRAY OF WORD values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   ARRAY OF WORD arguments. *)

END WordIO.