(* (C) 2012-2015 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

BLUEPRINT ProtoComputational [ProtoRoot];

(* General Blueprint for Computational ADTs *)


(* Required Module Type *)

MODULE TYPE = { isComputational; ~isNumber; * };


(* Required Constants *)

(* Memory Management *)

CONST [TDYN] isDynamic;
(* Computational ADTs shall define whether they are dynamically allocatable. *)

isDynamic ->
CONST [TREFC] isRefCounted;
(* Dynamic ADTs shall define whether they are reference counted. *)


(* Required Procedures *)

(* Memory Management *)

isDynamic -> PROCEDURE [NEW];

isRefCounted -> PROCEDURE [RETAIN];

isDynamic -> PROCEDURE [RELEASE];


(* Arithmetic Operations *)

PROCEDURE [+];
(* All computational ADTs shall be required to bind to + (addition). *)

PROCEDURE [-];
(* All computational ADTs shall be required to bind to + (subtraction). *)

isNumber -> PROCEDURE [*];
(* Numeric ADTs shall be required to bind to * (multiplication). *)


(* Relational Operations *)

PROCEDURE [=];
(* All computational ADTs shall be required to bind to = (equality). *)

(* The operation for # is synthesised from this binding. *)


(* Inhibited Bindings *)

NOT isNumber -> PROCEDURE [TMIN] = NONE; (* inhibited *)
(* Non-Numeric ADTs may not be required to bind to TMIN. *)

NOT isNumber -> PROCEDURE [TMAX] = NONE; (* inhibited *)
(* Non-Numeric ADTs may not be required to bind to TMAX. *)

NOT isNumber -> PROCEDURE [SXF] = NONE; (* inhibited *)
(* Non-Numeric ADTs may not be required to bind to SXF. *)

NOT isNumber -> PROCEDURE [VAL] = NONE; (* inhibited *)
(* Non-Numeric ADTs may not be required to bind to VAL. *)

NOT isNumber -> PROCEDURE [ODD] = NONE; (* inhibited *)
(* Non-Numeric ADTs may not be required to bind to ODD. *)

NOT isNumber -> PROCEDURE [<] = NONE; (* inhibited *)
(* Non-Numeric ADTs may not be required to bind to < (less-than). *)

NOT isNumber -> PROCEDURE [>] = NONE; (* inhibited *)
(* Non-Numeric ADTs may not be required to bind to > (greater-than). *)


END ProtoComputational.