(* (C) 2012-2015 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

(* General Blueprint for Non-Scalar Numeric ADTs *)

BLUEPRINT ProtoNonScalar [ProtoNumeric]; (* conforms to ProtoNumeric *)

(* Non-Scalar numeric ADTs must be records to be statically allocatable,
   structured literals constructed from scalar number literals may be used. *)

MODULE TYPE = OPAQUE | RECORD;


(* Bindings required for Non-Scalar Numeric ADTs *)

(* The operations TMIN and TMAX are not meaningful for non-scalar types *)

PROCEDURE [TMIN] = NONE;
(* conforming blueprints may not require binding to TMIN. *)

PROCEDURE [TMAX] = NONE;
(* conforming blueprints may not require binding to TMAX. *)


(* Bindings to monadic operations *)

(* Unary Minus is not common to all non-scalar types,
   its binding may be required by more specialised blueprints. *)


(* The operations ABS and ODD are not meaningful for non-scalar types *)

PROCEDURE [ABS] = NONE;
(* conforming blueprints may not require binding to ABS. *)

PROCEDURE [ODD] = NONE;
(* conforming blueprints may not require binding to ODD. *)


(* Bindings to dyadic operations *)

PROCEDURE [+] add ( op1, op2 : ProtoNonScalar ) : ProtoNonScalar;
(* Required procedure to bind to the + operator. *)

PROCEDURE [-] subtract ( op1, op2 : ProtoNonScalar ) : ProtoNonScalar;
(* Required procedure to bind to the - operator. *)

(* The operations * and / are not common to all non-scalar types,
   their bindings may be required by more specialised blueprints. *)


(* Bindings to relational operations *)

PROCEDURE [=] isEqual ( op1, op2 : ProtoNonScalar ) : ProtoNonScalar;
(* Required procedure to bind to the = operator. *)

(* The operation for the # operator is synthesized as NOT (op1 = op2) *)


(* The operations < and > are not meaningful for non-scalar types *)

PROCEDURE [<] = NONE;
(* Conforming blueprints may not require binding to the < operator. *)

PROCEDURE [>] = NONE;
(* Conforming blueprints may not require binding to the > operator. *)


END ProtoNonScalar.