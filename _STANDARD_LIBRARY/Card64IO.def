(* (C) 2009, 2010 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE Card64IO [ProtoIO] FOR CARD64;

(* I/O Module for Type CARD64 *)

FROM FileIO IMPORT File;

(* EBNF of the textual representation of CARD64 values:
    CARD64Value : simpleFormat |
        cBase16Format | m2Base16Format | universalFormat ;
    simpleFormat : decimalDigit+ ;
    cBase16Format : "0x" base16Digit+ ;
    m2Base16Format : "0" base16Digit+ "H" ;
    universalFormat :  sign? fillChar* numeral ;
    sign : "+" ;
    fillChar : " " | "*" | "0" ;
    numeral : leadDigitGroup ( separator? digitGroup )* ;
    separator : " " | "." | "," ;
    leadDigitGroup : decimalDigit decimalDigit? decimalDigit? ;
    digitGroup : decimalDigit decimalDigit decimalDigit ;
    decimalDigit  : "0" .. "9" ;
    base16Digit : decimalDigit | "A" .. "F" ; *)

PROCEDURE [READ] Read( infile : File; VAR n : CARD64 );
(* Reads the textual representation of a CARD64 value from stream infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the numeral being read are
     removed from infile
   - the numeric value of the numeral string read is assigned to the variable
     passed in for n
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a CARD64 argument. *)

PROCEDURE [WRITE] Write( outfile : File; CONST n : CARD64 );
(* Writes the textual representation of value n to stream outfile. This
   procedure is substituted for invocations of WRITE with a CARD64 argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST CARD64 );
(* Writes a formatted textual representation of one or more BYTE values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   CARD64 arguments. *)

PROCEDURE [READ] ReadArray ( infile : File; VAR value : ARRAY OF CARD64 );
(* Calls Read repeatedly to read the textual representation of a sequence of
 CARD64 values from stream infile nto an array 
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with an ARRAY OF CARD64 argument.*)


PROCEDURE [WRITE] WriteArray ( outfile : File; CONST value : ARRAY OF CARD64 );
(* Calls Write repeatedly to write an array  of CARD64in simple format to stream outfile.
  This procedure is substituted for invocations of WRITE with an ARRAY OF CARD64 argument.*)

PROCEDURE [WRITEF] WriteArrayF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST ARRAY OF CARD64 );

(* Writes a formatted textual representation of one or more ARRAY OF CARD64 values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   ARRAY OF CARD64 arguments. *)

END Card64IO.