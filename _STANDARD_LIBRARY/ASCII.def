(* (C) 2009-2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE ASCII;

(* Mnemonics and Macros for 7-bit-ASCII characters *)

CONST

(* ISO/IEC 646 conform character code mnemonics *)

(* Control characters *)

    NUL = 0u0;
    SOH = 0u01;
    STX = 0u02;
    ETX = 0u03;
    EOT = 0u04;
    ENQ = 0u05;
    ACK = 0u06;
    BEL = 0u07;
    BS  = 0u08;
    HT  = 0u09;
    LF  = 0u0A;
    VT  = 0u0B;
    FF  = 0u0C;
    CR  = 0u0D;
    SO  = 0u0E;
    SI  = 0u0F;
    DLE = 0u10;
    DC1 = 0u11;
    DC2 = 0u12;
    DC3 = 0u13;
    DC4 = 0u14;
    NAK = 0u15;
    SYN = 0u16;
    ETB = 0u17;
    CAN = 0u18;
    EM  = 0u19;
    SUB = 0u1A;
    ESC = 0u1B;
    ESCAPE = ESC;
    FS  = 0u1C;
    GS  = 0u1D;
    RS  = 0u1E;
    US  = 0u1F;
    DEL = 0u7F;
    DELETE = DEL;

(* Whitespace *)

    SP = 0u20;
    SPACE = SP;

(* Digits *)

    DIGIT_ZERO = 0u30;
    DIGIT_ONE = 0u31;
    DIGIT_TWO = 0u32;
    DIGIT_THREE = 0u33;
    DIGIT_FOUR = 0u34;
    DIGIT_FIVE = 0u35;
    DIGIT_SIX = 0u36;
    DIGIT_SEVEN = 0u37;
    DIGIT_EIGHT = 0u38;
    DIGIT_NINE = 0u39;

(* Uppercase letters *)

    LATIN_CAPITAL_LETTER_A = 0u41;
    LATIN_CAPITAL_LETTER_B = 0u42;
    LATIN_CAPITAL_LETTER_C = 0u43;
    LATIN_CAPITAL_LETTER_D = 0u44;
    LATIN_CAPITAL_LETTER_E = 0u45;
    LATIN_CAPITAL_LETTER_F = 0u46;
    LATIN_CAPITAL_LETTER_G = 0u47;
    LATIN_CAPITAL_LETTER_H = 0u48;
    LATIN_CAPITAL_LETTER_I = 0u49;
    LATIN_CAPITAL_LETTER_J = 0u4A;
    LATIN_CAPITAL_LETTER_K = 0u4B;
    LATIN_CAPITAL_LETTER_L = 0u4C;
    LATIN_CAPITAL_LETTER_M = 0u4D;
    LATIN_CAPITAL_LETTER_N = 0u4E;
    LATIN_CAPITAL_LETTER_O = 0u4F;
    LATIN_CAPITAL_LETTER_P = 0u50;
    LATIN_CAPITAL_LETTER_Q = 0u51;
    LATIN_CAPITAL_LETTER_R = 0u52;
    LATIN_CAPITAL_LETTER_S = 0u53;
    LATIN_CAPITAL_LETTER_T = 0u54;
    LATIN_CAPITAL_LETTER_U = 0u55;
    LATIN_CAPITAL_LETTER_V = 0u56;
    LATIN_CAPITAL_LETTER_W = 0u57;
    LATIN_CAPITAL_LETTER_X = 0u58;
    LATIN_CAPITAL_LETTER_Y = 0u59;
    LATIN_CAPITAL_LETTER_Z = 0u5A;

(* Lowercase letters *)

    LATIN_SMALL_LETTER_A = 0u61;
    LATIN_SMALL_LETTER_B = 0u62;
    LATIN_SMALL_LETTER_C = 0u63;
    LATIN_SMALL_LETTER_D = 0u64;
    LATIN_SMALL_LETTER_E = 0u65;
    LATIN_SMALL_LETTER_F = 0u66;
    LATIN_SMALL_LETTER_G = 0u67;
    LATIN_SMALL_LETTER_H = 0u68;
    LATIN_SMALL_LETTER_I = 0u69;
    LATIN_SMALL_LETTER_J = 0u6A;
    LATIN_SMALL_LETTER_K = 0u6B;
    LATIN_SMALL_LETTER_L = 0u6C;
    LATIN_SMALL_LETTER_M = 0u6D;
    LATIN_SMALL_LETTER_N = 0u6E;
    LATIN_SMALL_LETTER_O = 0u6F;
    LATIN_SMALL_LETTER_P = 0u70;
    LATIN_SMALL_LETTER_Q = 0u71;
    LATIN_SMALL_LETTER_R = 0u72;
    LATIN_SMALL_LETTER_S = 0u73;
    LATIN_SMALL_LETTER_T = 0u74;
    LATIN_SMALL_LETTER_U = 0u75;
    LATIN_SMALL_LETTER_V = 0u76;
    LATIN_SMALL_LETTER_W = 0u77;
    LATIN_SMALL_LETTER_X = 0u78;
    LATIN_SMALL_LETTER_Y = 0u79;	
    LATIN_SMALL_LETTER_Z = 0u7A;	

(* All other printable characters *)

    EXCLAMATION_MARK = 0u21;
    QUOTATION_MARK = 0u22;
    NUMBER_SIGN = 0u23;
    POUND_SIGN = 0u23;
    DOLLAR_SIGN = 0u24;
    CURRENCY_SIGN = 0u24;
    PERCENT_SIGN = 0u25;
    AMPERSAND = 0u26
    APOSTROPHE = 0u27;
    LEFT_PARENTHESIS = 0u28;
    RIGHT_PARENTHESIS = 0u29;
    ASTERISK = 0u2A;
    PLUS_SIGN = 0u2B;
    COMMA = 0u2C;
    HYPHEN_MINUS = 0u2D;
    FULL_STOP = 0u2E;
    SOLIDUS = 0u2F;
    COLON = 0u3A;
    SEMICOLON = 0u3B;
    LESS_THAN_SIGN = 0u3C;
    EQUALS_SIGN = 0u3D;
    GREATER_THAN_SIGN = 0u3E;
    QUESTION_MARK = 0u3F;
    COMMERCIAL_AT = 0u40;
    LEFT_SQUARE_BRACKET = 0u5B;
    REVERSE_SOLIDUS = 0u5C;
    RIGHT_SQUARE_BRACKET = 0u5D;
    CIRCUMFLEX_ACCENT = 0u5E;
    LOW_LINE = 0u5F;
    GRAVE_ACCENT = 0u60;
    LEFT_CURLY_BRACKET = 0u7B;
    VERTICAL_LINE = 0u7C;
    RIGHT_CURLY_BRACKET = 0u7D;
    TILDE = 0u7E;


(* Non-Standard Aliases *)

(* Aliases for control characters *)
    
    END_OF_STRING = NUL;
    STRING_TERMINATOR = NUL;
    
    TAB = HT;
    TABULATOR = HT;
    
    EOL = LF;
    END_OF_LINE = LF;
    
    NEW_LINE = LF;
    NEWLINE = LF;
    LINE_FEED = LF;
    LINEFEED = LF;
    
    FORM_FEED = FF;
    FORMFEED = FF;
    
    RET = CR;
    
    XON = DC1;
    XOFF = DC3;
    
(* Aliases for whitespace *)
    
    WHITESPACE = SP;
    
(* Aliases for uppercase letters *)
    
    UPPERCASE_A = LATIN_CAPITAL_LETTER_A;
    UPPERCASE_B = LATIN_CAPITAL_LETTER_B;
    UPPERCASE_C = LATIN_CAPITAL_LETTER_C;
    UPPERCASE_D = LATIN_CAPITAL_LETTER_D;
    UPPERCASE_E = LATIN_CAPITAL_LETTER_E;
    UPPERCASE_F = LATIN_CAPITAL_LETTER_F;
    UPPERCASE_G = LATIN_CAPITAL_LETTER_G;
    UPPERCASE_H = LATIN_CAPITAL_LETTER_H;
    UPPERCASE_I = LATIN_CAPITAL_LETTER_I;
    UPPERCASE_J = LATIN_CAPITAL_LETTER_J;
    UPPERCASE_K = LATIN_CAPITAL_LETTER_K;
    UPPERCASE_L = LATIN_CAPITAL_LETTER_L;
    UPPERCASE_M = LATIN_CAPITAL_LETTER_M;
    UPPERCASE_N = LATIN_CAPITAL_LETTER_N;
    UPPERCASE_O = LATIN_CAPITAL_LETTER_O;
    UPPERCASE_P = LATIN_CAPITAL_LETTER_P;
    UPPERCASE_Q = LATIN_CAPITAL_LETTER_Q;
    UPPERCASE_R = LATIN_CAPITAL_LETTER_R;
    UPPERCASE_S = LATIN_CAPITAL_LETTER_S;
    UPPERCASE_T = LATIN_CAPITAL_LETTER_T;
    UPPERCASE_U = LATIN_CAPITAL_LETTER_U;
    UPPERCASE_V = LATIN_CAPITAL_LETTER_V;
    UPPERCASE_X = LATIN_CAPITAL_LETTER_X;
    UPPERCASE_Y = LATIN_CAPITAL_LETTER_Y;
    UPPERCASE_Z = LATIN_CAPITAL_LETTER_Z;
    
(* Aliases for lowercase letters *)
    
    LOWERCASE_A = LATIN_SMALL_LETTER_A;
    LOWERCASE_B = LATIN_SMALL_LETTER_B;
    LOWERCASE_C = LATIN_SMALL_LETTER_C;
    LOWERCASE_D = LATIN_SMALL_LETTER_D;
    LOWERCASE_E = LATIN_SMALL_LETTER_E;
    LOWERCASE_F = LATIN_SMALL_LETTER_F;
    LOWERCASE_G = LATIN_SMALL_LETTER_G;
    LOWERCASE_H = LATIN_SMALL_LETTER_H;
    LOWERCASE_I = LATIN_SMALL_LETTER_I;
    LOWERCASE_J = LATIN_SMALL_LETTER_J;
    LOWERCASE_K = LATIN_SMALL_LETTER_K;
    LOWERCASE_L = LATIN_SMALL_LETTER_L;
    LOWERCASE_M = LATIN_SMALL_LETTER_M;
    LOWERCASE_N = LATIN_SMALL_LETTER_N;
    LOWERCASE_O = LATIN_SMALL_LETTER_O;
    LOWERCASE_P = LATIN_SMALL_LETTER_P;
    LOWERCASE_Q = LATIN_SMALL_LETTER_Q;
    LOWERCASE_R = LATIN_SMALL_LETTER_R;
    LOWERCASE_S = LATIN_SMALL_LETTER_S;
    LOWERCASE_T = LATIN_SMALL_LETTER_T;
    LOWERCASE_U = LATIN_SMALL_LETTER_U;
    LOWERCASE_V = LATIN_SMALL_LETTER_V;
    LOWERCASE_X = LATIN_SMALL_LETTER_X;
    LOWERCASE_Y = LATIN_SMALL_LETTER_Y;
    LOWERCASE_Z = LATIN_SMALL_LETTER_Z;

(* Aliases for all other printable characters *)
    
    EXCLAMATION = EXCLAMATION_MARK;
    
    DOUBLE_QUOTE = QUOTATION_MARK;
    DOUBLEQUOTE = QUOTATION_MARK;
    
    PERCENT = PERCENT_SIGN;

    SINGLE_QUOTE = APOSTROPHE;
    SINGLEQUOTE = APOSTROPHE;
    
    LEFT_PAREN = LEFT_PARENTHESIS;
    LEFTPAREN = LEFT_PARENTHESIS;
    
    RIGHT_PAREN = RIGHT_PARENTHESIS;
    RIGHTPAREN = RIGHT_PARENTHESIS;
    
    PLUS = PLUS_SIGN;
    
    MINUS = HYPHEN_MINUS;
    HYPHEN = HYPHEN_MINUS;
    
    DOT = FULL_STOP;
    PERIOD = FULL_STOP;
    
    SLASH = SOLIDUS;
    FORWARD_SLASH = SOLIDUS;
    FORWARDSLASH = SOLIDUS;
    
    LESS_THAN = LESS_THAN_SIGN;
    LEFT_ANGULAR_BRACKET = LESS_THAN_SIGN;
    
    EQUAL_SIGN = EQUALS_SIGN;
    EQUALS = EQUALS_SIGN;
    EQUAL = EQUALS_SIGN;

    NUMBERSIGN = NUMBER_SIGN;
    OCTOTHORPE = NUMBER_SIGN;
    
    GREATHER_THAN = GREATER_THAN_SIGN;
    RIGHT_ANGULAR_BRACKET = GREATER_THAN_SIGN;
    
    AT_SIGN = COMMERCIAL_AT;
    
    LEFT_BRACKET = LEFT_SQUARE_BRACKET;
    LEFTBRACKET = LEFT_SQUARE_BRACKET;
        
    BACK_SLASH = REVERSE_SOLIDUS;
    BACKSLASH = REVERSE_SOLIDUS;
    
    RIGHT_BRACKET = RIGHT_SQUARE_BRACKET;
    RIGHTBRACKET = RIGHT_SQUARE_BRACKET;
    
    CARET = CIRCUMFLEX_ACCENT;
    
    LOWLINE = LOW_LINE;
    UNDERSCORE = LOW_LINE;
    
    BACK_QUOTE = GRAVE_ACCENT;
    BACKQUOTE = GRAVE_ACCENT;
    
    LEFT_CURLY_BRACE = LEFT_CURLY_BRACKET;
    LEFT_BRACE = LEFT_CURLY_BRACKET;
    LEFTBRACE = LEFT_CURLY_BRACKET;
    
    VERTICAL_BAR = VERTICAL_LINE;
    
    RIGHT_CURLY_BRACE = RIGHT_CURLY_BRACKET;
    RIGHT_BRACE = RIGHT_CURLY_BRACKET;
    RIGHTBRACE = RIGHT_CURLY_BRACKET;
    

(* Macros *)

<*INLINE*> PROCEDURE toUpper( ch : CHAR ) : CHAR;

<*INLINE*> PROCEDURE toLower( ch : CHAR ) : CHAR;

<*INLINE*> PROCEDURE isUpper( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLower( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE is7bit( ch : UNICHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNot7bit( ch : UNICHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isControl( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotControl( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isWhitespaceOrTab( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotWhitespaceOrTab( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isPrintable( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotPrintable( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isBoolean( ch : CHAR ) : BOOLEAN;
(* Tests if ch is any of "0", "1", "y", "n", "t", "f" *)

<*INLINE*> PROCEDURE isNotBoolean( ch : CHAR ) : BOOLEAN;
(* Tests if ch is not any of "0", "1", "y", "n", "t", "f" *)

<*INLINE*> PROCEDURE isDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isOctalDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotOctalDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLetter( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLetter( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isDTMF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotDTMF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAlphaNumeric( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAlphaNumeric( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAlphaNumOrLowline( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAlphaNumOrLowline( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isM2IdentChar( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotM2IdentChar( ch : CHAR ) : BOOLEAN;

END ASCII.
