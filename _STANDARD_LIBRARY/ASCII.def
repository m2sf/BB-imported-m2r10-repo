(* (C) 2009, 2010 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE ASCII;

(*  Mnemonics and Macros for 7-bit-ASCII characters *)

CONST

(* Control characters *)

    NUL =  0U;
    SOH =  1U;
    STX =  2U;
    ETX =  3U;
    EOT =  4U;
    ENQ =  5U;
    ACK =  6U;
    BEL =  7U;
    BS  =  8U;
    HT  =  9U;
    LF  = 0AU;
    VT  = 0BU;
    FF  = 0CU;
    CR  = 0DU;
    SO  = 0EU;
    SI  = 0FU;
    DLE = 10U;
    DC1 = 11U;
    DC2 = 12U;
    DC3 = 13U;
    DC4 = 14U;
    NAK = 15U;
    SYN = 16U;
    ETB = 17U;
    CAN = 18U;
    EM  = 19U;
    SUB = 1AU;
    ESC = 1BU;
    FS  = 1CU;
    GS  = 1DU;
    RS  = 1EU;
    US  = 1FU;
    DEL = 7FU;

(* Whitespace *)

    SP = 20U;

(* Digits *)

    DIGIT_ZERO = 30U;
    DIGIT_ONE = 31U;
    DIGIT_TWO = 32U;
    DIGIT_THREE = 33U;
    DIGIT_FOUR = 34U;
    DIGIT_FIVE = 35U;
    DIGIT_SIX = 36U;
    DIGIT_SEVEN = 37U;
    DIGIT_EIGHT = 38U;
    DIGIT_NINE = 39U;

(* Uppercase letters *)

    UPPERCASE_A = 41U;
    UPPERCASE_B = 42U;
    UPPERCASE_C = 43U;
    UPPERCASE_D = 44U;
    UPPERCASE_E = 45U;
    UPPERCASE_F = 46U;
    UPPERCASE_G = 47U;
    UPPERCASE_H = 48U;
    UPPERCASE_I = 49U;
    UPPERCASE_J = 4AU;
    UPPERCASE_K = 4BU;
    UPPERCASE_L = 4CU;
    UPPERCASE_M = 4DU;
    UPPERCASE_N = 4EU;
    UPPERCASE_O = 4FU;
    UPPERCASE_P = 50U;
    UPPERCASE_Q = 51U;
    UPPERCASE_R = 52U;
    UPPERCASE_S = 53U;
    UPPERCASE_T = 54U;
    UPPERCASE_U = 55U;
    UPPERCASE_V = 56U;
    UPPERCASE_W = 57U;
    UPPERCASE_X = 58U;
    UPPERCASE_Y = 59U;
    UPPERCASE_Z = 5AU;

(* Lowercase letters *)

    LOWERCASE_A = 61U;
    LOWERCASE_B = 62U;
    LOWERCASE_C = 63U;
    LOWERCASE_D = 64U;
    LOWERCASE_E = 65U;
    LOWERCASE_F = 66U;
    LOWERCASE_G = 67U;
    LOWERCASE_H = 68U;
    LOWERCASE_I = 69U;
    LOWERCASE_J = 6AU;
    LOWERCASE_K = 6BU;
    LOWERCASE_L = 6CU;
    LOWERCASE_M = 6DU;
    LOWERCASE_N = 6EU;
    LOWERCASE_O = 6FU;
    LOWERCASE_P = 70U;
    LOWERCASE_Q = 71U;
    LOWERCASE_R = 72U;
    LOWERCASE_S = 73U;
    LOWERCASE_T = 74U;
    LOWERCASE_U = 75U;
    LOWERCASE_V = 76U;
    LOWERCASE_W = 77U;
    LOWERCASE_X = 78U;
    LOWERCASE_Y = 79U;	
    LOWERCASE_Z = 7AU;	

(* All other printable characters *)

    EXCLAMATION = 21U;
    DOUBLEQUOTE = 22U;
    OCTOTHORPE = 23U;
    DOLLAR = 24U;
    PERCENT = 25U;
    AMPERSAND = 26U;
    SINGLEQUOTE = 27U;
    OPENING_PARENTHESIS = 28U;
    CLOSING_PARENTHESIS = 29U;
    ASTERISK = 2AU;
    PLUS = 2BU;
    COMMA = 2CU;
    MINUS = 2DU;
    DOT = 2EU;
    SLASH = 2FU;
    COLON = 3AU;
    SEMICOLON = 3BU;
    LESS_THAN = 3CU;
    EQUAL_SIGN = 3DU;
    GREATER_THAN = 3EU;
    QUESTION_MARK = 3FU;
    AT_SIGN = 40U;
    OPENING_BRACKET = 5BU;
    BACKSLASH = 5CU;
    CLOSING_BRACKET = 5DU;
    CARET= 5EU;
    LOWLINE = 5FU;
    BACKQUOTE = 60U;
    OPENING_BRACE = 7BU;
    VERTICAL_BAR = 7CU;
    CLOSING_BRACE = 7DU;
    TILDE = 7EU;

(* Aliases *)

    ENDOFSTRING = NUL;
    END_OF_STRING = NUL;
    STRINGTERMINATOR = NUL;
    STRING_TERMINATOR = NUL;
    TAB = HT;
    TABULATOR = HT;
    EOL = LF;
    ENDOFLINE = LF;
    END_OF_LINE = LF;
    NEWLINE = LF;
    NEW_LINE = LF;
    LINEFEED = LF;
    LINE_FEED = LF;
    FORMFEED = FF;
    FORM_FEED = FF;
    RET = CR;
    XON = DC1;
    XOFF = DC3;
    ESCAPE = ESC;
    WHITESPACE = SP;
    HASH = OCTOTHORPE;
    NUMBERSIGN = OCTOTHORPE;
    NUMBER_SIGN = OCTOTHORPE;
    APOSTROPHE = SINGLEQUOTE;
    SINGLE_QUOTE = SINGLEQUOTE;
    DASH = MINUS;
    HYPHEN = MINUS;
    DOUBLE_QUOTE = DOUBLEQUOTE;
    OPENING_PAREN = OPENING_PARENTHESIS;
    OPENINGPARENTHESIS = OPENING_PARENTHESIS;
    CLOSING_PAREN = CLOSING_PARENTHESIS;
    CLOSINGPARENTHESIS = CLOSING_PARENTHESIS;
    FORWARDSLASH = SLASH;
    FORWARD_SLASH = SLASH;
    BACK_SLASH = BACKSLASH;
    BACK_QUOTE = BACKQUOTE;
    UNDERSCORE = LOWLINE;
    OPENING_ANGULAR_BRACKET = LESS_THAN;
    CLOSING_ANGULAR_BRACKET = GREATER_THAN;

(* Macros *)

<*INLINE*> PROCEDURE toUpper( ch : CHAR ) : CHAR;

<*INLINE*> PROCEDURE toLower( ch : CHAR ) : CHAR;

<*INLINE*> PROCEDURE isUpper( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLower( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE is7bit( ch : UNICHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNot7bit( ch : UNICHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isControl( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotControl( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isWhitespaceOrTab( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotWhitespaceOrTab( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isPrintable( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotPrintable( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isBoolean( ch : CHAR ) : BOOLEAN;
(* Tests if ch is any of "0", "1", "y", "n", "t", "f" *)

<*INLINE*> PROCEDURE isNotBoolean( ch : CHAR ) : BOOLEAN;
(* Tests if ch is not any of "0", "1", "y", "n", "t", "f" *)

<*INLINE*> PROCEDURE isDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isOctalDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotOctalDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLetter( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLetter( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isDTMF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotDTMF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAlphaNumeric( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAlphaNumeric( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAlphaNumOrLowline( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAlphaNumOrLowline( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isM2IdentChar( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotM2IdentChar( ch : CHAR ) : BOOLEAN;

END ASCII.
