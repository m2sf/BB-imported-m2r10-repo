(* (C) 2009-2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE ASCII;

(*  Mnemonics and Macros for 7-bit-ASCII characters *)

CONST

(* Control characters *)

    NUL = 0u0;
    SOH = 0u01;
    STX = 0u02;
    ETX = 0u03;
    EOT = 0u04;
    ENQ = 0u05;
    ACK = 0u06;
    BEL = 0u07;
    BS  = 0u08;
    HT  = 0u09;
    LF  = 0u0A;
    VT  = 0u0B;
    FF  = 0u0C;
    CR  = 0u0D;
    SO  = 0u0E;
    SI  = 0u0F;
    DLE = 0u10;
    DC1 = 0u11;
    DC2 = 0u12;
    DC3 = 0u13;
    DC4 = 0u14;
    NAK = 0u15;
    SYN = 0u16;
    ETB = 0u17;
    CAN = 0u18;
    EM  = 0u19;
    SUB = 0u1A;
    ESC = 0u1B;
    FS  = 0u1C;
    GS  = 0u1D;
    RS  = 0u1E;
    US  = 0u1F;
    DEL = 0u7F;

(* Whitespace *)

    SP = 0u20;

(* Digits *)

    DIGIT_ZERO = 0u30;
    DIGIT_ONE = 0u31;
    DIGIT_TWO = 0u32;
    DIGIT_THREE = 0u33;
    DIGIT_FOUR = 0u34;
    DIGIT_FIVE = 0u35;
    DIGIT_SIX = 0u36;
    DIGIT_SEVEN = 0u37;
    DIGIT_EIGHT = 0u38;
    DIGIT_NINE = 0u39;

(* Uppercase letters *)

    UPPERCASE_A = 0u41;
    UPPERCASE_B = 0u42;
    UPPERCASE_C = 0u43;
    UPPERCASE_D = 0u44;
    UPPERCASE_E = 0u45;
    UPPERCASE_F = 0u46;
    UPPERCASE_G = 0u47;
    UPPERCASE_H = 0u48;
    UPPERCASE_I = 0u49;
    UPPERCASE_J = 0u4A;
    UPPERCASE_K = 0u4B;
    UPPERCASE_L = 0u4C;
    UPPERCASE_M = 0u4D;
    UPPERCASE_N = 0u4E;
    UPPERCASE_O = 0u4F;
    UPPERCASE_P = 0u50;
    UPPERCASE_Q = 0u51;
    UPPERCASE_R = 0u52;
    UPPERCASE_S = 0u53;
    UPPERCASE_T = 0u54;
    UPPERCASE_U = 0u55;
    UPPERCASE_V = 0u56;
    UPPERCASE_W = 0u57;
    UPPERCASE_X = 0u58;
    UPPERCASE_Y = 0u59;
    UPPERCASE_Z = 0u5A;

(* Lowercase letters *)

    LOWERCASE_A = 0u61;
    LOWERCASE_B = 0u62;
    LOWERCASE_C = 0u63;
    LOWERCASE_D = 0u64;
    LOWERCASE_E = 0u65;
    LOWERCASE_F = 0u66;
    LOWERCASE_G = 0u67;
    LOWERCASE_H = 0u68;
    LOWERCASE_I = 0u69;
    LOWERCASE_J = 0u6A;
    LOWERCASE_K = 0u6B;
    LOWERCASE_L = 0u6C;
    LOWERCASE_M = 0u6D;
    LOWERCASE_N = 0u6E;
    LOWERCASE_O = 0u6F;
    LOWERCASE_P = 0u70;
    LOWERCASE_Q = 0u71;
    LOWERCASE_R = 0u72;
    LOWERCASE_S = 0u73;
    LOWERCASE_T = 0u74;
    LOWERCASE_U = 0u75;
    LOWERCASE_V = 0u76;
    LOWERCASE_W = 0u77;
    LOWERCASE_X = 0u78;
    LOWERCASE_Y = 0u79;	
    LOWERCASE_Z = 0u7A;	

(* All other printable characters *)

    EXCLAMATION = 0u21;
    DOUBLEQUOTE = 0u22;
    OCTOTHORPE = 0u23;
    DOLLAR = 0u24;
    PERCENT = 0u25;
    AMPERSAND = 0u26;
    SINGLEQUOTE = 0u27;
    OPENING_PARENTHESIS = 0u28;
    CLOSING_PARENTHESIS = 0u29;
    ASTERISK = 0u2A;
    PLUS = 0u2B;
    COMMA = 0u2C;
    MINUS = 0u2D;
    DOT = 0u2E;
    SLASH = 0u2F;
    COLON = 0u3A;
    SEMICOLON = 0u3B;
    LESS_THAN = 0u3C;
    EQUAL_SIGN = 0u3D;
    GREATER_THAN = 0u3E;
    QUESTION_MARK = 0u3F;
    AT_SIGN = 0u40;
    OPENING_BRACKET = 0u5B;
    BACKSLASH = 0u5C;
    CLOSING_BRACKET = 0u5D;
    CARET= 0u5E;
    LOWLINE = 0u5F;
    BACKQUOTE = 0u60;
    OPENING_BRACE = 0u7B;
    VERTICAL_BAR = 0u7C;
    CLOSING_BRACE = 0u7D;
    TILDE = 0u7E;

(* Aliases *)

    ENDOFSTRING = NUL;
    END_OF_STRING = NUL;
    STRINGTERMINATOR = NUL;
    STRING_TERMINATOR = NUL;
    TAB = HT;
    TABULATOR = HT;
    EOL = LF;
    ENDOFLINE = LF;
    END_OF_LINE = LF;
    NEWLINE = LF;
    NEW_LINE = LF;
    LINEFEED = LF;
    LINE_FEED = LF;
    FORMFEED = FF;
    FORM_FEED = FF;
    RET = CR;
    XON = DC1;
    XOFF = DC3;
    ESCAPE = ESC;
    WHITESPACE = SP;
    HASH = OCTOTHORPE;
    NUMBERSIGN = OCTOTHORPE;
    NUMBER_SIGN = OCTOTHORPE;
    APOSTROPHE = SINGLEQUOTE;
    SINGLE_QUOTE = SINGLEQUOTE;
    DASH = MINUS;
    HYPHEN = MINUS;
    DOUBLE_QUOTE = DOUBLEQUOTE;
    OPENING_PAREN = OPENING_PARENTHESIS;
    OPENINGPARENTHESIS = OPENING_PARENTHESIS;
    CLOSING_PAREN = CLOSING_PARENTHESIS;
    CLOSINGPARENTHESIS = CLOSING_PARENTHESIS;
    FORWARDSLASH = SLASH;
    FORWARD_SLASH = SLASH;
    BACK_SLASH = BACKSLASH;
    BACK_QUOTE = BACKQUOTE;
    UNDERSCORE = LOWLINE;
    OPENING_ANGULAR_BRACKET = LESS_THAN;
    CLOSING_ANGULAR_BRACKET = GREATER_THAN;

(* Macros *)

<*INLINE*> PROCEDURE toUpper( ch : CHAR ) : CHAR;

<*INLINE*> PROCEDURE toLower( ch : CHAR ) : CHAR;

<*INLINE*> PROCEDURE isUpper( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLower( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE is7bit( ch : UNICHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNot7bit( ch : UNICHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isControl( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotControl( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isWhitespaceOrTab( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotWhitespaceOrTab( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isPrintable( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotPrintable( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isBoolean( ch : CHAR ) : BOOLEAN;
(* Tests if ch is any of "0", "1", "y", "n", "t", "f" *)

<*INLINE*> PROCEDURE isNotBoolean( ch : CHAR ) : BOOLEAN;
(* Tests if ch is not any of "0", "1", "y", "n", "t", "f" *)

<*INLINE*> PROCEDURE isDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isOctalDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotOctalDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperHexDigit( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperAtoF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLowerCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLowerCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isUpperCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotUpperCase( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isLetter( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotLetter( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isDTMF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotDTMF( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAlphaNumeric( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAlphaNumeric( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isAlphaNumOrLowline( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotAlphaNumOrLowline( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isM2IdentChar( ch : CHAR ) : BOOLEAN;

<*INLINE*> PROCEDURE isNotM2IdentChar( ch : CHAR ) : BOOLEAN;

END ASCII.
