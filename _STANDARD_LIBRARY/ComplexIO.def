(* (C) 2015-2016 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE ComplexIO [ProtoIO] FOR COMPLEX;

(* IO Extension Library for Type COMPLEX *)

IMPORT FileIO;

PROCEDURE [READ] Read( infile : FileIO.File; VAR z : COMPLEX );
(* Reads the textual representation of a COMPLEX value from input stream infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the numeral being read are
     removed from infile
   - the numeric value of the numeral string read is assigned to the variable
     passed in for z
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a COMPLEX argument. *)

PROCEDURE [WRITE] Write( outfile : FileIO.File; CONST z : COMPLEX );
(* Writes the textual representation of value z to output stream outfile. This
   procedure is substituted for invocations of WRITE with a COMPLEX argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : FileIO.File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST >0 OF COMPLEX );
(* Writes a formatted textual representation of one or more COMPLEX values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   COMPLEX arguments. *)

END ComplexIO.