(* (C) 2009-2016 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE LongRealBaseIO [ProtoIO] FOR LONGREAL;

(* IO Extension Library for Values of Type LONGREAL *)

IMPORT ChanIO;

(* EBNF of the textual representation of LONGREAL values:

    realValue :
        unpaddedRealValue | leftPaddedRealValue | rightPaddedRealValue ;
    leftPaddedRealValue : padding+ unPaddedRealValue ;
    rightPaddedRealValue : unPaddedRealValue padding+ ;
    unPaddedRealValue : simpleFormat | otherFormats ;
    otherFormats : sign? fillChar*
        ( fixedFmtNumeral | engFmtNumeral | expFmtNumeral ) suffix? ;
    simpleFormat : negativeSign? decimalDigit '.' decimalDigit+ exponent ;
    fixedFmtNumeral : integralPart decimalPoint fractionalPart ;
    engFmtNumeral : engIntegralPart decimalPoint fractionalPart engExponent ;
    expFmtNumeral : fixedFmtNumeral exponent ;
    padding : ' ' ;
    sign : " " | "+" | "-" ;
    negativeSign : "-" ;
    fillChar : " " | "*" | "0" ;
    integralPart :
        decimalDigit decimalDigit? decimalDigit? ( separator? digitGroup )* ;
    engIntegralPart :
        ( ( ( decimalDigit separator? )? decimalDigit )? decimalDigit )?
        decimalDigit ;
    fractionalPart :
        ( decimalDigit ( decimalDigit ( decimalDigit separator )? )? )*
        decimalDigit ;
    exponent : "E" ( "+" | "-" ) decimalDigit decimalDigit+ ;
    engExponent : exponent ;
    decimalPoint : "." | "," ;
    separator : " " | "." | "," ;
    digitGroup : decimalDigit decimalDigit decimalDigit ;
    decimalDigit  : "0" .. "9" ;
    suffix : "'" character* "'" ;

   Static semantics:

    decimalPoint and separator must never both use the same symbol
    the value represented by engExponent must always be divisible by three. *)


(* Bindings required for static ADTs by blueprint ProtoIO *)


PROCEDURE [READ] Read( inchan : ChanIO.Channel; VAR r : LONGREAL );
(* Reads the textual representation of a LONGREAL value from input channel inchan
   - any leading whitespace is skipped
   - any remaining characters that are part of the numeral being read are
     removed from inchan
   - the numeric value of the numeral string read is assigned to the variable
     passed in for r
   - the channel status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
     procedure is substituted for invocations of READ with a LONGREAL argument. *)

PROCEDURE [WRITE] Write( outchan : ChanIO.Channel; CONST r : LONGREAL );
(* Writes the textual representation of value r to output channel outchan. This
   procedure is substituted for invocations of WRITE with a LONGREAL argument. *)

PROCEDURE [WRITEF] WriteF
  ( outchan      : ChanIO.Channel;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST >0 OF LONGREAL );
(* Writes a formatted textual representation of one or more REAL values to
   output channel outchan. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   LONGREAL arguments. *)


END LongRealBaseIO.