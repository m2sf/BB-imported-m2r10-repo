(* (C) 2009-2016 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE LongRealBaseFDIO [ProtoIO] FOR LONGREAL;

(* File-Descriptor IO Extension Library for Values of Type LONGREAL *)

IMPORT FileDescIO, StdFDIO;

(* EBNF of the textual representation of LONGREAL values:

    realValue :
        unpaddedRealValue | leftPaddedRealValue | rightPaddedRealValue ;
    leftPaddedRealValue : padding+ unPaddedRealValue ;
    rightPaddedRealValue : unPaddedRealValue padding+ ;
    unPaddedRealValue : simpleFormat | otherFormats ;
    otherFormats : sign? fillChar*
        ( fixedFmtNumeral | engFmtNumeral | expFmtNumeral ) suffix? ;
    simpleFormat : negativeSign? decimalDigit '.' decimalDigit+ exponent ;
    fixedFmtNumeral : integralPart decimalPoint fractionalPart ;
    engFmtNumeral : engIntegralPart decimalPoint fractionalPart engExponent ;
    expFmtNumeral : fixedFmtNumeral exponent ;
    padding : ' ' ;
    sign : " " | "+" | "-" ;
    negativeSign : "-" ;
    fillChar : " " | "*" | "0" ;
    integralPart :
        decimalDigit decimalDigit? decimalDigit? ( separator? digitGroup )* ;
    engIntegralPart :
        ( ( ( decimalDigit separator? )? decimalDigit )? decimalDigit )?
        decimalDigit ;
    fractionalPart :
        ( decimalDigit ( decimalDigit ( decimalDigit separator )? )? )*
        decimalDigit ;
    exponent : "E" ( "+" | "-" ) decimalDigit decimalDigit+ ;
    engExponent : exponent ;
    decimalPoint : "." | "," ;
    separator : " " | "." | "," ;
    digitGroup : decimalDigit decimalDigit decimalDigit ;
    decimalDigit  : "0" .. "9" ;
    suffix : "'" character* "'" ;

   Static semantics:

    decimalPoint and separator must never both use the same symbol
    the value represented by engExponent must always be divisible by three. *)

(* Bindings required for static ADTs by blueprint ProtoIO *)

PROCEDURE [READ] Read
  ( infile : FileDescIO.File; VAR r : LONGREAL )
  [ infile = StdFDIO.in (* default argument *) ];
(* Reads the textual representation of a LONGREAL value from infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the numeral being read are
     removed from infile
   - the numeric value of the numeral string read is assigned to the variable
     passed in for r
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This pro-
     cedure is substituted for invocations of READ with a LONGREAL argument. *)

PROCEDURE [WRITE] Write
  ( outfile : FileDescIO.File; CONST r : LONGREAL )
  [ outfile = StdFDIO.out (* default argument *) ];
(* Writes the textual representation of value r to outfile. This procedure
   is substituted for invocations of WRITE with a LONGREAL argument. *)

PROCEDURE [WRITEF] WriteF
  ( outfile      : FileDescIO.File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST >0 OF LONGREAL )
  [ outfile = StdFDIO.out (* default argument *) ];
(* Writes a formatted textual representation of one or more LONGREAL values to
   outfile. The output format is determined by fmtStr. This procedure is sub-
   stituted for invocations of WRITEF with one or more LONGREAL arguments. *)

END LongRealBaseFDIO.