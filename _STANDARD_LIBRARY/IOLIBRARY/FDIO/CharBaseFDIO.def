(* (C) 2009-2016 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE CharBaseFDIO [ProtoIO] FOR CHAR;

(* File-Descriptor IO Extension Library for Values of Type CHAR *)

IMPORT FileDescIO;

(* EBNF of the textual representation of CHAR values:
    charValue : textFormat | numericFormat ;
    textFormat : letter | digit | nonAlphaChar ;
    numericFormat : "0u" base16Digit base16Digit ;
    base16Digit : "0" .. "9" | "A" .. "F" ; *)

PROCEDURE [READ] Read ( infile : FileDescIO.File; VAR ch : CHAR );
(* Reads a CHAR value from infile
   - any leading whitespace is skipped
   - the character being read is removed from infile
   - the code point of the character value read is assigned to ch
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a CHAR argument. *)

PROCEDURE [WRITE] Write ( outfile : FileDescIO.File; ch : CHAR );
(* Writes the textual representation of CHAR ch to outfile. This procedure
   is substituted for invocations of WRITE with a CHAR argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : FileDescIO.File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST >0 OF CHAR );
(* Writes a formatted textual representation of one or more CHAR values to
   outfile. The output format is determined by fmtStr. This procedure is
   substituted for invocations of WRITEF with one or more CHAR arguments. *)

END CharBaseFDIO.