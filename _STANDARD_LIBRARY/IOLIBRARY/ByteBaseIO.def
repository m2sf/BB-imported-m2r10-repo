(* (C) 2009-2016 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE ByteBaseIO [ProtoIO] FOR BYTE;

(* Base IO Extension Library for Values of Type BYTE *)

IMPORT UNSAFE, ChanIO;

(* EBNF of the textual representation of BYTE values:
    octetValue : simpleFormat |
        base16Format | base2Format | rawBase16Format | rawBase2Format ;
    simpleFormat : ( base16Digit base16Digit )+ ;
    base16Format : "0x" simpleFormat ;
    base2Format : "0b" rawBase2Format ;
    rawBase16Format : "0" simpleFormat ;
    rawBase2Format : bit bit bit bit bit bit bit bit ;
    base16Digit : "0" .. "9" | "A" .. "F" ;
    bit : "0" | "1" ; *)

PROCEDURE [READ] Read ( inchan : ChanIO.Channel; VAR b : UNSAFE.BYTE );
(* Reads the textual representation of a BYTE value from channel inchan
   - any leading whitespace is skipped
   - any remaining characters that are part of the value being read are
     removed from inchan
   - the textual representation of the value read is assigned to b
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a BYTE argument. *)

PROCEDURE [WRITE] Write ( outchan : ChanIO.Channel; b : UNSAFE.BYTE );
(* Writes the value of BYTE b in simple format to channel outchan. This
   procedure is substituted for invocations of WRITE with a BYTE argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : ChanIO.Channel;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST >0 OF UNSAFE.BYTE );
(* Writes a formatted textual representation of one or more BYTE values to
   output channel outchan. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   BYTE arguments. *)


END ByteBaseIO.