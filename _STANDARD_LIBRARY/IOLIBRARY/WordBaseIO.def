(* (C) 2009-2016 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE WordBaseIO [ProtoIO] FOR WORD;

(* IO Extension Library for Values of Type WORD *)

IMPORT ChanIO;

(* EBNF of the textual representation of WORD values:
    wordValue :
       digitGroup digitGroup ( groupSeparator? digitGroup digitGroup )* ;
    digitGroup : base16Digit base16Digit ;
    base16Digit : "0" .. "9" | "A" .. "F" ;
    groupSeparator : " " | "." ;
    
    static semantics:
    
    WORD values are always left padded with zeroes to the length
    required to represent the maximum value of type WORD. *)

PROCEDURE [READ] Read ( inchan : ChanIO.Channel; VAR w : WORD );
(* Reads the textual representation of a WORD value from channel inchan
   - any leading whitespace is skipped
   - any remaining characters that are part of the value being read are
     removed from inchan
   - the textual representation of the value read is assigned to w
   - the channel status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a WORD argument. *)

PROCEDURE [WRITE] Write ( outchan : ChanIO.Channel; w : WORD );
(* Writes the value of WORD w in standard format to channel outchan. This
   procedure is substituted for invocations of WRITE with a WORD argument.*)

PROCEDURE [WRITEF] WriteF
  ( outchan      : ChanIO.Channel;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST >0 OF WORD );
(* Writes a formatted textual representation of one or more WORD values to
   output channel outchan. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   WORD arguments. *)

END WordBaseIO.