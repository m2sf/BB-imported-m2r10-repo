(* (C) 2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE StdIO;

(* This module provides redirectable standard file accessors *)
 
IMPORT FileIO;

TYPE
    File = ALIAS OF FileIO.File;
    Status = ALIAS OF FileIO.Status;


VAR
    stdIn, stdOut, stdErr : File;
    
(* Import of module StdIO causes the variables stdIn, stdOut and stdErr
   to be initialized to their respective implementation defined defaults. *)


(* Convenience procedures *)

PROCEDURE WriteLn;
(* Writes an empty line terminated by newline to stdOut. *)

PROCEDURE SkipLine;
(* Consumes all characters up to and including the next newline from stdIn. *)

PROCEDURE StatusOf( file : File ) : Status;
(* Calls procedure FileIO.StatusOf.  Returns the current status of <file> *)


(* Redirecting the standard file accessors *)

PROCEDURE SetInFile ( file : File );
(* Sets stdIn to the file associated with file accessor <file>. *)

PROCEDURE SetOutFile ( file : File );
(* Sets stdOut to the file associated with file accessor <file>. *)

PROCEDURE SetErrFile ( file : File );
(* Sets stdErr to the file associated with file accessor <file>. *)


END StdIO.