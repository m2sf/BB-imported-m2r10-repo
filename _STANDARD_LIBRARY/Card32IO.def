(* (C) 2009, 2010 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE Card32IO [ProtoIO] FOR CARD32;

(* I/O Module for Type CARD32 *)

FROM FileIO IMPORT File;

(* EBNF of the textual representation of CARD32 values:
    CARD32Value : simpleFormat |
        cBase16Format | m2Base16Format | universalFormat ;
    simpleFormat : decimalDigit+ ;
    cBase16Format : "0x" base16Digit+ ;
    m2Base16Format : "0" base16Digit+ "H" ;
    universalFormat :  sign? fillChar* numeral ;
    sign : "+" ;
    fillChar : " " | "*" | "0" ;
    numeral : leadDigitGroup ( separator? digitGroup )* ;
    separator : " " | "." | "," ;
    leadDigitGroup : decimalDigit decimalDigit? decimalDigit? ;
    digitGroup : decimalDigit decimalDigit decimalDigit ;
    decimalDigit  : "0" .. "9" ;
    base16Digit : decimalDigit | "A" .. "F" ; *)

PROCEDURE [READ] Read( infile : File; VAR n : CARD32 );
(* Reads the textual representation of a CARD32 value from stream infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the numeral being read are
     removed from infile
   - the numeric value of the numeral string read is assigned to the variable
     passed in for n
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a CARD32 argument. *)

PROCEDURE [WRITE] Write( outfile : File; CONST n : CARD32 );
(* Writes the textual representation of value n to stream outfile. This
   procedure is substituted for invocations of WRITE with a CARD32 argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST CARD32 );
(* Writes a formatted textual representation of one or more BYTE values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   CARD32 arguments. *)

PROCEDURE [READ] ReadArray ( infile : File; VAR value : ARRAY OF CARD32 );
(* Calls Read repeatedly to read the textual representation of a sequence of
 CARD32 values from stream infile into an array.
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with an ARRAY OF CARD32 argument.*)


PROCEDURE [WRITE] WriteArray ( outfile : File; CONST value : ARRAY OF CARD32 );
(* Calls Write repeatedly to write an array  of CARD32in simple format to stream outfile.
  This procedure is substituted for invocations of WRITE with an ARRAY OF CARD32 argument.*)

PROCEDURE [WRITEF] WriteArrayF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST ARRAY OF CARD32 );

(* Writes a formatted textual representation of one or more ARRAY OF CARD32 values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   ARRAY OF CARD32 arguments. *)

END Card32IO.