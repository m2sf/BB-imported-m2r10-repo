(* (C) 2009-2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE BS64 [ProtoStaticSet]; (* sixty-four six-four *)

(* 64-bit statically allocatable bitsets *)


(* Imports *)

FROM FileIO IMPORT File; (* required for IO *)


(* Constants *)

CONST MaxCapacity = 64;

CONST RequiredOctets = 8;

CONST [ORD] isOrdered = TRUE;
(* Enables the use of FOR DESCENDING syntax. *)


(* BS64 Type *)

TYPE BS64 = OPAQUE RECORD
    elements : ARRAY ReqOctets OF OCTET;
END; (* BS64 *)


PROCEDURE [TLIMIT] capacityLimit : LONGCARD;
(* Returns the value of constant MaxCapacity. This function is bound to
   pervasive function TLIMIT for type operand BS64. *)


PROCEDURE [TSIZE] storageSize : LONGCARD;
(* Returns the value of constant RequiredOctets. This function is bound
   to pervasive function TSIZE for type operand BS64. *)


(* Conversion *)

(* none *)


(* Storage, Removal, Retrieval and Inspection of Contents *)

PROCEDURE [STORE] storeElements
  ( VAR bitset : BS64; valueList : ARGLIST OF CARDINAL );
(* Stores the elements given by valueList in BS64 variable bitset.
   This procedure is bound to pervasive procedure STORE for first
   operands of type BS64. *)


PROCEDURE [REMOVE] removeElements
  ( VAR bitset : BS64; valueList : ARGLIST OF CARDINAL );
(* Removes the elements given by valueList from BS64 variable bitset. Re-
   moves all elements if no values are passed in valueList. This procedure
   is bound to pervasive procedure REMOVE for first operands of type BS64. *)


PROCEDURE [RETRIEVE] membershipForElement
  ( CONST bitset : BS64; value : CARDINAL ) : BOOLEAN;
(* Calls function isElement and returns its result. This function is bound
   to pervasive function RETRIEVE for first operands of type BS64. *)


PROCEDURE [IN] isElement ( CONST bitset : BS64; value : CARDINAL ) : BOOLEAN;
(* Returns TRUE if value is an element of bitset, returns FALSE otherwise.
   This function is bound to operator IN for left operands of type CARDINAL
   and right operands of type BS64. *)


PROCEDURE [COUNT] elementCount ( CONST bitset : BS64 ) : LONGCARD;
(* Returns the number of elements in BS64 set. This function is bound
   to pervasive function COUNT for type BS64. *)


(* Iteration *)

TYPE ForLoopBodyProc = PROCEDURE ( (* value : *) CARDINAL );

PROCEDURE [FOR] forIterator
  ( CONST bitset : BS64;
    forLoopBody : ForLoopBodyProc; ascending : BOOLEAN );
(* Iterates over all elements in bitset, executing procedure forLoopBody
   for each element stored in bitset. If TRUE is passed in for ascending,
   the iteration order is ascending, otherwise descending. This procedure
   is bound to built-in syntax FOR IN for type BS64. *)


(* Set Operations *) 

PROCEDURE [+] union ( CONST bitset1, bitset2 : BS64 ) : BS64;
(* Returns the union of BS64 values bitset1 and bitset2. This function
   is bound to the + operator for operands of type BS64. *)

PROCEDURE [-] diff ( CONST bitset1, bitset2 : BS64 ) : BS64;
(* Returns the set difference of BS64 values bitset1 and bitset2. This
   function is bound to the - operator for operands of type BS64. *)

PROCEDURE [*] intersection ( CONST bitset1, bitset2 : BS64 ) : BS64;
(* Returns the intersection of BS64 values bitset1 and bitset2.  This
   function it bound to the * operator for operands of type BS64. *)

PROCEDURE [/] symdiff ( CONST bitset1, bitset2 : BS64 ) : BS64;
(* Returns the symmetric set difference of BS64 values bitset1 and bitset2.
   This function is bound to the / operator for operands of type BS64. *)


(* Relational operations *)

PROCEDURE [=] isEqual ( CONST bitset1, bitset2 : BS64 ) : BOOLEAN;
(* Returns TRUE if BS64 values bitset1 and bitset2 are equal, otherwise
   FALSE. This function is used to synthesise bindings to the operators
   = and # for operands of type BS64. *)


PROCEDURE [SUBSET] isSubset ( CONST bitset1, bitset2 : BS64 ) : BOOLEAN;
(* Returns TRUE if BS64 bitset1 is a subset of bitset2, otherwise FALSE.
   This function is used to synthesise bindings to the operators >, >=,
   < and <= for operands of type BS64. *)

(* Introspection *)

PROCEDURE capacity ( CONST bitset : BS64 ) : LONGCARD;
(* Always returns the value of TLIMIT(BS64). *)


PROCEDURE entryLimit ( CONST bitset : BS64 ) : LONGCARD;
(* Always returns the value of TLIMIT(BS64). *)


PROCEDURE isResizable ( CONST bitset : BS64 ) : BOOLEAN;
(* Always returns FALSE because type BS64 is static *)


END BS64.