(* (C) 2012 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

(* Specialised Prototype Definition for Cardinal Number ADTs *)

PROTOTYPE UZTYPE [SCALAR]; (* conforms to SCALAR *)

(* UZTYPE ADTs must be opaque records to be statically allocatable,
   integer literals are used *)

TYPE = OPAQUE RECORD := INTEGER;


(* Bindings required for UZTYPE ADTs *)

(* Bindings to pervasive functions TMIN and TMAX *)

PROCEDURE [TMIN] minValue : UZTYPE;
(* procedure to return minimal value of a cardinal number ADT *)

PROCEDURE [TMAX] maxValue : UZTYPE;
(* procedure to return maximal value of a cardinal number ADT *)


(* Bindings to scalar conversion primitives *)

PROCEDURE [SXF] toSXF ( lexeme : ARRAY OF CHAR; VAR sxf : ARRAY OF OCTET );
(* procedure to convert a literal to a value in scalar exchange format *)

PROCEDURE [VAL] fromSXF ( sxf : ARRAY OF OCTET; VAR value : UZTYPE );
(* procedure to convert value in scalar exchange format to the ADT *)


(* Binding to assignment operator for non-literal values *)

PROCEDURE [:=] assign ( VAR left : UZTYPE; right : UZTYPE );

(* The assignment of literal values is synthesised from SXF and VAL *)


PROCEDURE [ABS] abs ( n : UZTYPE ) : UZTYPE;
(* procedure to bind to the ABS operator for operands of the UZTYPE ADT *)

PROCEDURE [ODD] odd ( n : UZTYPE ) : BOOLEAN;
(* procedure to bind to the ODD operator for operands of the UZTYPE ADT *)


(* Bindings to dyadic operations *)

PROCEDURE [+] add ( n, m : UZTYPE ) : UZTYPE;
(* procedure to bind to the + operator for operands of the UZTYPE ADT *)

(* The operation for the ++ statement is synthesized as n := n + VAL(1) *)

PROCEDURE [-] subtract ( n, m : UZTYPE ) : UZTYPE;
(* procedure to bind to the - operator for operands of the UZTYPE ADT *)

(* The operation for the -- statement is synthesized as n := n - VAL(1) *)

PROCEDURE [*] multiply ( n, m : UZTYPE ) : UZTYPE;
(* procedure to bind to the * operator for operands of the UZTYPE ADT *)

PROCEDURE [DIV] divide ( n, m : UZTYPE ) : UZTYPE;
(* procedure to bind to the DIV operator for operands of the UZTYPE ADT *)

PROCEDURE [MOD] modulo ( n, m : UZTYPE ) : UZTYPE;
(* procedure to bind to the MOD operator for operands of the UZTYPE ADT *)


(* Bindings to relational operations *)

PROCEDURE [=] isEqual ( n, m : UZTYPE ) : BOOLEAN;
(* procedure to bind to the = operator for operands of the UZTYPE ADT *)

(* The operation for the # operator is synthesized as NOT (n = m) *)

PROCEDURE [>] isGreater ( n, m : UZTYPE ) : BOOLEAN;
(* procedure to bind to the > operator for operands of the UZTYPE ADT *)

(* The operation for the <= operator is synthesized as NOT (n > m) *)

PROCEDURE [<] isLess ( n, m : UZTYPE ) : BOOLEAN;
(* procedure to bind to the < operator for operands of the UZTYPE ADT *)

(* The operation for the >= operator is synthesized as NOT (n < m) *)


END UZTYPE.