(* (C) 2012 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

(* General Prototype Definition for Scalar and Non-Scalar Number ADTs *)

PROTOTYPE NUMBERS; (* root of numeric prototypes *)

(* Number ADTs must be records to be statically allocatable,
   the following literals may be used:
   o  integer or real number literals
   o  structured literals constructed from real number literals *)

TYPE = RECORD | OPAQUE RECORD := INTEGER | REAL | * OF REAL;


(* Bindings required for Number ADTs *)

(* The operations TMIN and TMAX are meaningful only for scalar types,
   their bindings may be required by more specialised prototypes *)

(* The operations SXF and VAL are meaningful only for scalar types
   their bindings may be required by more specialised prototypes *)

(* The operations ABS, NEG and ODD are not common to all number types,
   their bindings may be required by more specialised prototypes *)


(* Bindings to dyadic operations *)

PROCEDURE [+] add ( op1, op2 : NUMBERS ) : NUMBERS;
(* procedure to bind to the + operator for operands of the number ADT *)

PROCEDURE [-] subtract ( op1, op2 : NUMBERS ) : NUMBERS;
(* procedure to bind to the - operator for operands of the number ADT *)

(* The operations *, /, DIV and MOD are not common to all number types,
   their bindings may be required by more specialised prototypes *)


(* Bindings to relational operations *)

PROCEDURE [=] isEqual ( op1, op2 : NUMBERS ) : BOOLEAN;
(* procedure to bind to the = operator for operands of the scalar ADT *)

(* The operation for the # operator is synthesized as NOT (op1 = op2) *)

(* The operations < and > are meaningful only to scalar types,
   their bindings may be required by more specialised prototypes *)


END NUMBERS.