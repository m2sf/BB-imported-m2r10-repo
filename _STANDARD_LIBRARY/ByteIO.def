(* (C) 2009-2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE ByteIO [ProtoIO] FOR BYTE;

(* I/O Module for Type BYTE *)

FROM UNSAFE IMPORT BYTE;
FROM FileIO IMPORT File;

(* EBNF of the textual representation of BYTE values:
    byteValue : simpleFormat |
        cBase16Format | m2Base2Format | m2Base16Format ;
    simpleFormat : ( base16Digit base16Digit )+ ;
    cBase16Format : "0x" simpleFormat ;
    m2Base16Format : "0" simpleFormat "H" ;
    m2Base2Format : ( bit bit bit bit bit bit bit bit )+ "B" ;
    base16Digit : "0" .. "9" | "A" .. "F" ;
    bit : "0" | "1" ; *)

PROCEDURE [READ] Read ( infile : File; VAR b : BYTE );
(* Reads the textual representation of a BYTE value from stream infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the value being read are
     removed from infile
   - the textual representation of the value read is assigned to b
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a BYTE argument. *)

PROCEDURE [WRITE] Write ( outfile : File; CONST b : BYTE );
(* Writes the value of BYTE b in simple format to stream outfile. This
   procedure is substituted for invocations of WRITE with a BYTE argument.*)

PROCEDURE [WRITEF] WriteF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST BYTE );
(* Writes a formatted textual representation of one or more BYTE values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   BYTE arguments. *)
   
PROCEDURE [READ] ReadArray ( infile : File; VAR value : ARRAY OF BYTE );
(* Calls Read repeatedly to read the textual representation of a sequence of
 BYTE values from stream infile into an array.
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with an ARRAY OF BYTE argument.*)


PROCEDURE [WRITE] WriteArray ( outfile : File; CONST value : ARRAY OF BYTE );
(* Calls Write repeatedly to write an array  of BYTEin simple format to stream outfile.
  This procedure is substituted for invocations of WRITE with an ARRAY OF BYTE argument.*)

PROCEDURE [WRITEF] WriteArrayF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : ARGLIST OF CONST ARRAY OF BYTE );

(* Writes a formatted textual representation of one or more ARRAY OF BYTE values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   ARRAY OF BYTE arguments. *)

END ByteIO.