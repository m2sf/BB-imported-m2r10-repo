(* (C) 2009-2013 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE LONGBCD [ProtoReal];

(* Double Precision Binary Coded Decimals *) 


FROM FileIO IMPORT File; (* required for IO *)


(* LONGBCD type *)

TYPE
    LONGBCD = OPAQUE RECORD
        value : ARRAY 16 OF OCTET; (* 128 bits *)
    END; (* LONGBCD *)

    (* 1-bit sign, 116-bit significand, signed 11-bit exponent *)


(* Bindings required by blueprint ProtoReal *)

(* Precision *)

CONST [TEXP] maxExponentDigits = 4;
(* maximum number of decimal digits of the exponent of a LONGBCD value *)

CONST [TSIG] maxSignificandDigits = 29;
(* maximum number of decimal digits of the significand of a LONGBCD value *)


(* Range *) 

(* TMIN(LONGBCD) = -9.999'999'999'999'999'999'999'999'999'9E+1023 *)

PROCEDURE [TMIN] minValue : LONGBCD;
(* returns the smallest possible value of type LONGBCD.
   This function is bound to pervasive function TMIN for type LONGBCD. *)

(* TMAX(LONGBCD) = +9.999'999'999'999'999'999'999'999'999'9E+1023 *)

PROCEDURE [TMAX] maxValue : LONGBCD;
(* returns the largest possible value of type LONGBCD.
   This function is bound to pervasive function TMAX for type LONGBCD. *)


(* Direct conversions to common types *)

PROCEDURE [::] toLONGCARD  ( a : LONGBCD ) : LONGCARD;
(* Converts LONGBCD value a to a LONGCARD value and returns it.  This func-
   tion is bound to the :: operator for LONGBCD to LONGCARD conversion. *)

PROCEDURE [::] toLONGINT ( a : LONGBCD ) : LONGINT; 
(* Converts LONGBCD value a to an LONGINT value and returns it.  This func-
   tion is bound to the :: operator for LONGBCD to LONGINT conversion. *)

PROCEDURE [::] toLONGREAL ( a : LONGBCD ) : LONGREAL;
(* Converts LONGBCD value a to a REAL value and returns it.  This func-
   tion is bound to the :: operator for LONGBCD to LONGREAL conversion. *)


(* Indirect conversions via scalar exchange format *)

PROCEDURE [SXF] toSXF ( a : LONGBCD; VAR s : ARRAY OF OCTET );
(* Converts LONGBCD value a to a string in scalar exchange format.
   This procedure is bound to built-in primitive SXF for type LONGBCD. *)

PROCEDURE [VAL] fromSXF ( CONST s : ARRAY OF OCTET; VAR a : LONGBCD );
(* Converts a string in scalar exchange format to a LONGBCD value.
   This procedure is bound to built-in primitive VAL for type LONGBCD. *)


(* Monadic arithmetic operations *) 

PROCEDURE [ABS] abs ( a : BCD ) : BCD;
(* Returns the absolute value of BCD value a.
   This function is bound to pervasive function ABS for type LONGBCD. *)

PROCEDURE [NEG] neg ( a : LONGBCD ) : LONGBCD;
(* Returns the sign reversed value of LONGBCD value a.
   This function is bound to the unary minus operator for type LONGBCD. *)


(* Dyadic arithmetic operations *) 

PROCEDURE [+] add ( a, b : LONGBCD ) : LONGBCD;
(* Adds LONGBCD values a and b and returns the result.
   This function is bound to the + operator for type LONGBCD. *)

PROCEDURE [-] sub ( a, b : LONGBCD ) : LONGBCD;
(* Subtracts LONGBCD value b from a and returns the result.
   This function is bound to the - operator for type LONGBCD. *)

PROCEDURE [*] multiply ( a, b : LONGBCD ) : LONGBCD;
(* Multiplies LONGBCD values a and b and returns the result.
   This function it bound to the * operator for type LONGBCD. *)

PROCEDURE [/] divide ( a, b : LONGBCD ) : LONGBCD;
(* Divives LONGBCD value a by b and returns the result.
   This function is bound to the / operator for type LONGBCD. *)


(* Relational operations *) 

PROCEDURE [=] isEqual ( a, b : LONGBCD ) : BOOLEAN;
(* Returns TRUE if LONGBCD values a and b are equal, otherwise FALSE.
   This function is bound to operators = and # for type LONGBCD. *)

PROCEDURE [<] isLess ( a, b : LONGBCD ) : BOOLEAN;
(* Returns TRUE if LONGBCD value a is less than b, otherwise FALSE.
   This function is bound to operators < and >= for type LONGBCD. *)

PROCEDURE [>] isGreater ( a, b : LONGBCD ) : BOOLEAN;
(* Returns TRUE if LONGBCD value a is greater than b, otherwise FALSE.
   This function is bound to operators > and <= for type LONGBCD. *)


(* IO operations *)

PROCEDURE [READ] Read( infile : File; VAR b : LONGBCD );
(* Reads the textual representation of a LONGBCD value from input stream infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the numeral being read are
     removed from infile
   - the numeric value of the numeral string read is assigned to the variable
     passed in for b
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
     procedure is substituted for invocations of READ with a LONGBCD argument. *)

PROCEDURE [WRITE] Write( outfile : File; CONST b : LONGBCD );
(* Writes the textual representation of value b to output stream outfile. This
   procedure is substituted for invocations of WRITE with a LONGBCD argument. *)

PROCEDURE [WRITEF] WriteF
  ( outfile      : File;
    CONST fmtStr : ARRAY OF CHAR;
    items        : VARIADIC OF LONGBCD );
(* Writes a formatted textual representation of one or more LONGBCD values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   LONGBCD arguments. *)

END LONGBCD.