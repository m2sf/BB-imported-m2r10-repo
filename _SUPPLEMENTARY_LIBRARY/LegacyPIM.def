(* (C) 2009, 2010 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE LegacyPIM;

(* Legacy Interface to Deprecated PIM Pervasives and IO Procedures *)

PROCEDURE CAP ( ch : CHAR ) : CHAR;
(* Returns ASCII.toUpper(ch) *)

PROCEDURE FLOAT ( x : INTEGER ) : REAL;
(* Returns x :: REAL *)

PROCEDURE TRUNC ( x : REAL ) : INTEGER;
(* Returns REALMath.trunc(x) :: INTEGER *)

PROCEDURE INTDIV ( i, j : INTEGER ) : INTEGER;
(* Returns i DIV j using PIM semantics *)

PROCEDURE INTMOD ( i, j : INTEGER ) : INTEGER;
(* Returns i MOD j using PIM semantics *)

PROCEDURE LONGDIV ( i, j : LONGINT ) : LONGINT;
(* Returns i DIV j using PIM semantics *)

PROCEDURE LONGMOD ( i, j : LONGINT ) : LONGINT;
(* Returns i MOD j using PIM semantics *)

PROCEDURE Read ( VAR ch : CHAR );
(* Invokes READ(stdIn, ch) to call CharIO.Read(stdIn, ch) *)

PROCEDURE Write ( ch : CHAR );
(* Invokes WRITE(stdOut, ch) to call CharIO.Write(stdOut, ch) *)

PROCEDURE ReadString ( VAR s : ARRAY OF CHAR );
(* Invokes READ(stdIn, s) to call ArrayOfCharIO.Read(stdIn, s) *)

PROCEDURE WriteString ( s : ARRAY OF CHAR );
(* Invokes WRITE(stdOut, ch) to call ArrayOfCharIO.Write(stdOut, s) *)

PROCEDURE ReadCard ( VAR x : CARDINAL );
(* Invokes READ(stdIn, x) to call CardinalIO.Read(stdIn, x) *)

PROCEDURE WriteCard ( x, n : CARDINAL );
(* Invokes WRITEF(stdOut, ">n", x) to call CardinalIO.WriteF(stdOut, ">n", x) *)

PROCEDURE WriteOct ( x, n : CARDINAL );
(* Writes the value of x in base 8 representation to stdOut *)

PROCEDURE WriteHex ( x, n : CARDINAL );
(* Invokes WRITEF(stdOut, "x>n", x) to call CardinalIO.WriteF(stdOut, "x>n", x)
   n is replaced by the textual representation of the value of parameter n *)

PROCEDURE ReadInt ( VAR x : INTEGER );
(* Invokes READ(stdIn, x) to call IntegerIO.Read(stdIn, x) *)

PROCEDURE WriteInt ( x : INTEGER; n : CARDINAL );
(* Invokes WRITEF(stdOut, ">n", x) to call IntegerIO.WriteF(stdOut, ">n", x)
   n is replaced by the textual representation of the value of parameter n *)

PROCEDURE ReadWrd ( VAR x : WORD );
(* Invokes READ(stdIn, x) to call WordIO.Read(stdIn, x) *)

PROCEDURE WriteWrd ( x : WORD );
(* Invokes WRITE(stdOut, x) to call WordIO.Write(stdOut, x) *)

PROCEDURE ReadReal ( x : REAL );
(* Invokes READ(stdIn, x) to call RealIO.Read(stdIn, x) *)

PROCEDURE WriteReal ( x : REAL; n : INTEGER );
(* Invokes WRITEF(stdOut, ">n", r) to call RealIO.WriteF(stdOut, ">n", r)
   n is replaced by the textual representation of the value of parameter n *)

PROCEDURE WriteFixPt ( x : REAL; n, k : INTEGER );
(* Invokes WRITEF(stdOut, "n.m", r) to call RealIO.WriteF(stdIn, "n.m", r)
   n is replaced by the textual representation of the value of parameter n,
   m is replaced by the textual representation of k - n - 1 *)

PROCEDURE WriteRealOct ( x : REAL );
(* Writes the exponent and significand of x in base 8 representation
   to stdOut *)

END LegacyPIM.