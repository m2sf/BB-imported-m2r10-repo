(* (C) 2009, 2010 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

DEFINITION MODULE BS16 [SetType]; (* Sixteen one-six *)

(* 16-bit Bitset *)

FROM FileIO IMPORT File; (* required for IO *)


(* BS16 type *)

TYPE
    BS16 = OPAQUE RECORD
        bits : ARRAY 2 OF OCTET; (* 16 bits *)
    END; (* BS16 *)


(* Literal assignment *)

PROCEDURE [:=] assign ( VAR assignTo : BS16;
                        elements     : VARIADIC OF CARDINAL );
(* Assigns a variadic list of values of type CARDINAL to BS16 assignTo.
   This procedure is bound to the := operator for literal assignment. *)


(* accessor *)

PROCEDURE [.] isElement ( CONST set : BS16; element : CARDINAL ) : BOOLEAN;
(* Returns TRUE if element is an element of BS16 set, otherwise FALSE.
   This function is bound to the array operator [ ] and the IN operator
   for rvalues of type BS16. *)


(* mutator *)

PROCEDURE [!] storeValue ( CONST set : BS16;
                           element   : CARDINAL;
                           value     : BOOLEAN );
(* Includes character element in BS16 set if value is TRUE, otherwise
   removes it from set. This procedure is bound to the array operator [ ]
   for lvalues of type BS16. *)


(* counter *)

PROCEDURE [COUNT] elementCount ( CONST set : BS16 ) : CARDINAL;
(* Returns the number of elements in BS16 set. This function is bound
   to pervasive function COUNT for type BS16. *)


(* Dyadic set operations *) 

PROCEDURE [+] union ( CONST set1, set2 : BS16 ) : BS16;
(* Returns the union of BS16 values set1 and set2.
   This function is bound to the + operator for type BS16. *)

PROCEDURE [-] diff ( CONST set1, set2 : BS16 ) : BS16;
(* Returns the set difference of BS16 values set1 and set2.
   This function is bound to the - operator for type BS16. *)

PROCEDURE [*] intersection ( set1, set2 : BS16 ) : BS16;
(* Returns the intersection of BS16 values set1 and set2.
   This function it bound to the * operator for type BS16. *)

PROCEDURE [/] symdiff ( set1, set2 : BS16 ) : BS16;
(* Returns the symmetric set difference of BS16 values set1 and set2.
   This function is bound to the / operator for type BS16. *)


(* Relational operations *)

PROCEDURE [=] isEqual ( set1, set2 : BS16 ) : BOOLEAN;
(* Returns TRUE if BS16 values set1 and set2 are equal, otherwise FALSE.
   This function is bound to operators = and # for type BS16. *)

PROCEDURE [<] isSubset ( set1, set2 : BS16 ) : BOOLEAN;
(* Returns TRUE if BS16 set1 is a true subset of set2, otherwise FALSE.
   This function is bound to operators < and >= for type BS16. *)

PROCEDURE [>] isSuperset ( set1, set2 : BS16 ) : BOOLEAN;
(* Returns TRUE if BS16 set1 is a true superset of set2, otherwise FALSE.
   This function is bound to operators > and <= for type BS16. *)


(* IO operations *)

(* The EBNF for the textual representation of BS16 values is:
    bitsetValue : simpleFormat | compactFormat | bitGroupFormat ;
    simpleFormat : bit+ ;
    compactFormat : base16Digit+ ;
    bitGroupFormat : "{" bit+ ( groupSeparator? bit+ )* "}" ;
    groupSeparator : " " | "." ;
    bit  : "0" | "1" ;
    base16Digit : "0" .. "9" | "A" .. "F" ;
   The number of bits shown is equal to the bitwidth of the BS16 type. *)

PROCEDURE Read ( infile : File; VAR set : BS16 );
(* Reads the textual representation of a BS16 value from stream infile
   - any leading whitespace is skipped
   - any remaining characters that are part of the value being read are
     removed from infile
   - the textual representation of the value read is assigned to set
   - the file status is set to any of:
     success, outOfRange, wrongFormat, endOfLine, or endOfInput. This
   procedure is substituted for invocations of READ with a BS16 argument. *)

PROCEDURE Write ( outfile : File; CONST set : BS16 );
(* Writes the value of CHARSET set in simple format to stream outfile. This
   procedure is substituted for invocations of WRITE with a BS16 argument.*)

PROCEDURE WriteF ( outfile      : File;
                   CONST fmtStr : ARRAY OF CHAR;
                   items        : VARIADIC OF CONST BS16 );
(* Writes a formatted textual representation of one or more BS16 values to
   output stream outfile. The output format is determined by fmtStr. This
   procedure is substituted for invocations of WRITEF with one or more
   BS16 arguments. *)

END BS16.