%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Benjamin Kowarsch
%%Title: Window .c
%%CreationDate: Sun Sep 30 18:33:59 2012
%%BoundingBox: 55 354 558 438
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%+ font Courier
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%IncludeResource: font Courier
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1.001 1.001 scale
-250 -41 translate
0 82 moveto 501 82 lineto 501 0 lineto 0 0 lineto closepath clip newpath
gsave
matrix currentmatrix
7 68 translate 3 3 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 68 moveto
62 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
62 46 [
[(+)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
61 47 translate 10 10 scale
0 0 1 90 270 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
64 47 translate 10 10 scale
0 0 1 270 450 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 57 moveto
64 57 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 37 moveto
64 37 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Courier findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
62 15 [
[(-)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
61 16 translate 10 10 scale
0 0 1 90 270 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
64 16 translate 10 10 scale
0 0 1 270 450 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 26 moveto
64 26 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
61 6 moveto
64 6 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
25 68 moveto
54.9997777160631 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
61 68 moveto
50.999 72.501 lineto
52.332481448567 69.5 lineto
52.332481448567 66.5 lineto
50.999 63.499 lineto
61 68 lineto
fill
grestore
gsave
62 68 moveto
108 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
25 61 translate 7 7 scale
0 0 1 0 90 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
39 47 moveto
42.9997777160631 47 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
49 47 moveto
38.999 51.501 lineto
40.332481448567 48.5 lineto
40.332481448567 45.5 lineto
38.999 42.499 lineto
49 47 lineto
fill
grestore
gsave
77 47 moveto
86.9997777160631 47 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
93 47 moveto
82.999 51.501 lineto
84.332481448567 48.5 lineto
84.332481448567 45.5 lineto
82.999 42.499 lineto
93 47 lineto
fill
grestore
gsave
matrix currentmatrix
39 54 translate 7 7 scale
0 0 1 180 270 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
93 54 translate 7 7 scale
0 0 1 270 360 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
39 16 moveto
42.9997777160631 16 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
49 16 moveto
38.999 20.501 lineto
40.332481448567 17.5 lineto
40.332481448567 14.5 lineto
38.999 11.499 lineto
49 16 lineto
fill
grestore
gsave
77 16 moveto
86.9997777160631 16 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
93 16 moveto
82.999 20.501 lineto
84.332481448567 17.5 lineto
84.332481448567 14.5 lineto
82.999 11.499 lineto
93 16 lineto
fill
grestore
gsave
matrix currentmatrix
39 23 translate 7 7 scale
0 0 1 180 270 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
93 23 translate 7 7 scale
0 0 1 270 360 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
107 61 translate 7 7 scale
0 0 1 90 180 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
32 23 moveto
32 61 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
100 23 moveto
100 61 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
171 68 [
[(  inPragmaTerm  )]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
124 78 moveto 94 0 rlineto 0 -20 rlineto -94 0 rlineto closepath
0 setlinejoin 2 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
106 68 moveto
115.999777716063 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
122 68 moveto
111.999 72.501 lineto
113.332481448567 69.5 lineto
113.332481448567 66.5 lineto
111.999 63.499 lineto
122 68 lineto
fill
grestore
gsave
356 68 moveto
357 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
299 45 [
[(  inPragmaTerm  )]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
252 55 moveto 94 0 rlineto 0 -20 rlineto -94 0 rlineto closepath
0 setlinejoin 2 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
407 45 [
[(  addOperator  )]
] 14 -0.5 0.5 0 false DrawText
grestore
gsave
365 55 moveto 84 0 rlineto 0 -20 rlineto -84 0 rlineto closepath
0 setlinejoin 2 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
354.000222283937 45 moveto
363 45 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
348 45 moveto
358.001 40.499 lineto
356.667518551433 43.5 lineto
356.667518551433 46.5 lineto
358.001 49.501 lineto
348 45 lineto
fill
grestore
gsave
466 45 moveto
467 45 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
457.000222283937 45 moveto
466 45 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
451 45 moveto
461.001 40.499 lineto
459.667518551433 43.5 lineto
459.667518551433 46.5 lineto
461.001 49.501 lineto
451 45 lineto
fill
grestore
gsave
250 68 moveto
349.999777716063 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
356 68 moveto
345.999 72.501 lineto
347.332481448567 69.5 lineto
347.332481448567 66.5 lineto
345.999 63.499 lineto
356 68 lineto
fill
grestore
gsave
357 68 moveto
471 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
235 68 moveto
250 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
250 59 translate 9 9 scale
0 0 1 90 180 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
241 59 moveto
241 54 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
250 54 translate 9 9 scale
0 0 1 180 270 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
467 59 translate 9 9 scale
0 0 1 0 90 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
476 59 moveto
476 54 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
467 54 translate 9 9 scale
0 0 1 -90 0 arc
setmatrix
0 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
467 68 moveto
476 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
219 68 moveto
228.999777716063 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
235 68 moveto
224.999 72.501 lineto
226.332481448567 69.5 lineto
226.332481448567 66.5 lineto
224.999 63.499 lineto
235 68 lineto
fill
grestore
gsave
9 68 moveto
18.9997777160631 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
25 68 moveto
14.999 72.501 lineto
16.332481448567 69.5 lineto
16.332481448567 66.5 lineto
14.999 63.499 lineto
25 68 lineto
fill
grestore
gsave
matrix currentmatrix
494 68 translate 3 3 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
475 68 moveto
484.999777716063 68 lineto
0 setlinecap
1 setlinejoin
3 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
491 68 moveto
480.999 72.501 lineto
482.332481448567 69.5 lineto
482.332481448567 66.5 lineto
480.999 63.499 lineto
491 68 lineto
fill
grestore
restore showpage

%%Trailer
end
%%EOF
