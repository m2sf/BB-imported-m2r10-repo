(* (C) 2015 by B.Kowarsch & R.Sutcliffe. All rights reserved. *)

(* Language defined global blueprint constraints *)

BLUEPRINT TCONSTRAINTS;

(isScalar) <> [TSCALAR];
(* Classification isScalar and binding to TSCALAR are mutually dependent. *)

(isScalar) -> [+], [-], [*];
(* Classification isScalar requires bindings to +, - and * (multiplication). *)

(isScalar) -> [/] | [DIV], [MOD];
(* Classification isScalar requires bindings to either /, or DIV and MOD. *)

(isCountable) <> [DIV], [MOD];
(* Classification isCountable and bindings to DIV and MOD
   are mutally dependent. *)

(isSigned) <> [ABS], [+/-];
(* Classification isSigned and bindings to ABS and unary minus
   are mutually dependent. *)

[+] -> [-] | [\];
(* Binding to + requires binding to either - or \. *)

[/] >< [DIV], [MOD];
(* Binding to / is mutually exclusive with DIV and MOD. *)

[LENGTH] >< [COUNT], [COUNT|#];
(* Binding to LENGTH is mutual exclusive with COUNT and COUNT|#. *)

[SUBSET] >< [<], [>];
(* Binding to SUBSET is mutually exclusive with < and >. *)

[<] <> [>];
(* Bindings to < and > are mutually dependent. *)

[FOR] >< [FOR|++], [FOR--];
(* Binding to FOR is mutually exclusive with FOR|++ and FOR|--. *)

[FOR|++] <> [FOR|--];
(* Bindings to FOR++ and FOR-- are mutually dependent. *)

isCountable -> CONST [TSCALAR] eMin = 0;
(* Classification isCountable requires eMin to be defined with a zero value. *)

isCountable -> CONST [TSCALAR] eMax = 0;
(* Classification isCountable requires eMax to be defined with a zero value. *)

(eMin = 0) AND (eMax = 0) -> isCountable;
(* eMin and eMax defined with a zero value require isCountable to be set. *)

isSigned <> CONST [TMIN] < 0;
(* Classification isSigned and a negative TMIN value are mutually dependent. *)

END TCONSTRAINTS.