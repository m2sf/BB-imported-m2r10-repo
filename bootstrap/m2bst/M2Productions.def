DEFINITION MODULE M2Productions;

TYPE Production =
  ( compilationUnit,
    programModule,
    defintionModule,
    blueprint,
    identList,
    moduleTypeSpec,
    propertySpec,
    literalSpec,
    protoLiteral,
    structuredProtoLiteral,
    reqValueCount,
    requirement,
    constRequirement,
    simpleConstRequirement,
    procedureRequirement,
    entityToBindTo,
    libGenDirective,
    importDirective,
    identifiersToImport,
    block,
    statementSequence,
    definition,
    constDefinition,
    variableDeclaration,
    declaration,
    type,
    derivedSubType,
    range,
    enumType,
    setType,
    arrayType,
    recordType,
    pointerType,
    coroutineType,
    procedureType,
    formalType,
    simpleFormalType,
    attributedFormalType,
    variadicFormalType,
    simpleVariadicFormalType,
    nonVariadicFormalType,
    procedureHeader,
    procedureSignature,
    formalParameters,
    attributedFormalParams,
    variadicFormalParams,
    nonVariadicFormalParams,
    qualident,
    statement,
    memMgtOperation,
    updateOrProcCall,
    ifStatement,
    caseStatement,
    case,
    loopStatement,
    whileStatement,
    repeatStatement,
    forStatement,
    designator,
    designatorTail,
    exprListOrSlice,
    expression,
    simpleExpression,
    term,
    factorOrNegation,
    factorOrTypeConv,
    factor,
    actualParameters,
    expressionList,
    structuredValue,
    valueComponent );

END M2Productions.